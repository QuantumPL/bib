@article{McCaskey2021,
 title = {Extending C++ for Heterogeneous Quantum-Classical Computing},
 author = {McCaskey, Alexander and Nguyen, Thien and Santana, Anthony and Claudino, Daniel and Kharazi, Tyler and Finkel, Hal},
 year = {2021},
 month = {June},
 journal = {ACM Transactions on Quantum Computing},
 publisher = {{Association for Computing Machinery}},
 address = {New York, NY, USA},
 volume = {2},
 number = {2},
 eid = {6},
 pages = {6},
 numpages = {36},
 doi = {10.1145/3462670},
 archiveprefix = {arXiv},
 eprint = {2010.03935},
 abstract = {We present qcorâ€”a language extension to C++ and compiler implementation that enables heterogeneous quantum-classical programming, compilation, and execution in a single-source context. Our work provides a first-of-its-kind C++ compiler enabling high-level quantum kernel (function) expression in a quantum-language agnostic manner, as well as a hardware-agnostic, retargetable compiler workflow targeting a number of physical and virtual quantum computing backends. qcor leverages novel Clang plugin interfaces and builds upon the XACC system-level quantum programming framework to provide a state-of-the-art integration mechanism for quantum-classical compilation that leverages the best from the community at-large. qcor translates quantum kernels ultimately to the XACC intermediate representation, and provides user-extensible hooks for quantum compilation routines like circuit optimization, analysis, and placement. This work details the overall architecture and compiler workflow for qcor, and provides a number of illuminating programming examples demonstrating its utility for near-term variational tasks, quantum algorithm expression, and feed-forward error correction schemes.},
 keywords = {domain specific languages, quantum programming, quantum computing, compilers}
}

