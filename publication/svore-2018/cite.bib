@inproceedings{Svore2018,
 abstract = {Quantum computing exploits quantum phenomena such as superposition and entanglement to realize a form of parallelism that is not available to traditional computing. It offers the potential of significant computational speed-ups in quantum chemistry, materials science, cryptography, and machine learning. The dominant approach to programming quantum computers is to provide an existing high-level language with libraries that allow for the expression of quantum programs. This approach can permit computations that are meaningless in a quantum context; prohibits succint expression of interaction between classical and quantum logic; and does not provide important constructs that are required for quantum programming. We present Q#, a quantum-focused domain-specific language explicitly designed to correctly, clearly and completely express quantum algorithms. Q# provides a type system; a tightly constrained environment to safely interleave classical and quantum computations; specialized syntax; symbolic code manipulation to automatically generate correct transformations of quantum operations; and powerful functional constructs which aid composition.},
 address = {New York, NY, USA},
 archiveprefix = {arxiv},
 author = {Svore, Krysta M. and Geller, Alan and Troyer, Matthias and Azariah, John and Granade, Christopher and Heim, Bettina and Kliuchnikov, Vadym and Mykhailova, Mariia and Paz, Andres and Roetteler, Martin},
 booktitle = {Proceedings of the Real World Domain Specific Languages Workshop 2018},
 doi = {10.1145/3183895.3183901},
 eprint = {1803.00652},
 month = {February},
 note = {See also Ch. 8 of iÌ§teHeim2020},
 pages = {7:1--7:10},
 publisher = {Association for Computing Machinery},
 series = {RWDSL '18},
 shorttitle = {Q#},
 timestamp = {2021-04-18},
 title = {Q#: Enabling Scalable Quantum Computing and Development with a High-Level DSL},
 year = {2018}
}

