@incollection{Altenkirch2009,
 abstract = {The quantum IO monad is a purely functional interface to quantum programming implemented as a Haskell library. At the same time it provides a constructive semantics of quantum programming. The QIO monad separates reversible (i.e., unitary) and irreversible (i.e., probabilistic) computations and provides a reversible let operation (ulet), allowing us to use ancillas (auxiliary qubits) in a modular fashion. QIO programs can be simulated either by calculating a probability distribution or by embedding it into the IO monad using the random number generator. As an example we present a complete implementation of Shor's algorithm.},
 address = {Cambridge},
 author = {Altenkirch, Thorsten and Green, Alexander S.},
 booktitle = {Semantic Techniques in Quantum Computation},
 crossref = {Gay2009},
 doi = {10.1017/CBO9781139193313.006},
 editor = {Gay, Simon J. and Mackie, Ian},
 month = {November},
 note = {Also see iÌ§teGreen2010 for a reimplementation in Agda.},
 pages = {173--205},
 publisher = {Cambridge University Press},
 timestamp = {2021-04-18},
 title = {The Quantum IO Monad},
 url = {https://www.cs.nott.ac.uk/~psztxa/g5xnsc/chapter.pdf},
 year = {2009}
}

