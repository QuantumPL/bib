@article{Chong2017,
 title = {Programming languages and compiler design for realistic quantum hardware},
 author = {Chong, Frederic T. and Franklin, Diana and Martonosi, Margaret},
 year = {2017},
 month = {September},
 journal = {Nature},
 volume = {549},
 number = {7671},
 pages = {180--187},
 doi = {10.1038/nature23459},
 abstract = {Quantum computing sits at an important inflection point. For years, high-level algorithms for quantum computers have shown considerable promise, and recent advances in quantum device fabrication offer hope of utility. A gap still exists, however, between the hardware size and reliability requirements of quantum computing algorithms and the physical machines foreseen within the next ten years. To bridge this gap, quantum computers require appropriate software to translate and optimize applications (toolflows) and abstraction layers. Given the stringent resource constraints in quantum computing, information passed between layers of software and implementations will differ markedly from in classical computing. Quantum toolflows must expose more physical details between layers, so the challenge is to find abstractions that expose key details while hiding enough complexity.},
 note = {Review Article},
 webnote = {Review Article},
 bibsource = {Quantum Programming Languages \& Verification Bibliography, https://git.io/qpl-bib}
}

