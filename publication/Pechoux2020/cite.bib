@inproceedings{Pechoux2020,
 title = {Quantum Programming with Inductive Datatypes: Causality and Affine Type Theory},
 author = {P{\'e}choux, Romain and Perdrix, Simon and Rennela, Mathys and Zamdzhiev, Vladimir},
 year = {2020},
 month = {April},
 booktitle = {Foundations of Software Science and Computation Structures, FoSSaCS 2020},
 editor = {Goubault-Larrecq, Jean and K{\"o}nig, Barbara},
 publisher = {{Springer International Publishing}},
 address = {Cham},
 series = {Lecture Notes in Computer Science},
 volume = {12077},
 pages = {562--581},
 doi = {10.1007/978-3-030-45231-5_29},
 abstract = {Inductive datatypes in programming languages allow users to define useful data structures such as natural numbers, lists, trees, and others. In this paper we show how inductive datatypes may be added to the quantum programming language QPL. We construct a sound categorical model for the language and by doing so we provide the first detailed semantic treatment of user-defined inductive datatypes in quantum programming. We also show our denotational interpretation is invariant with respect to big-step reduction, thereby establishing another novel result for quantum programming. Compared to classical programming, this property is considerably more difficult to prove and we demonstrate its usefulness by showing how it immediately implies computational adequacy at all types. To further cement our results, our semantics is entirely based on a physically natural model of von Neumann algebras, which are mathematical structures used by physicists to study quantum mechanics.},
 keywords = {quantum programming, inductive types, adequacy}
}

