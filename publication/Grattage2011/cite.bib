@inproceedings{Grattage2011,
 title = {An Overview of QML With a Concrete Implementation in Haskell},
 author = {Grattage, Jonathan},
 year = {2011},
 month = {February},
 booktitle = {Proceedings of the Joint 5th International Workshop on Quantum Physics and Logic and 4th Workshop on Developments in Computational Models (QPL/DCM 2008)},
 publisher = {Elsevier},
 series = {Electronic Notes in Theoretical Computer Science},
 volume = {270/1},
 pages = {165--174},
 doi = {10.1016/j.entcs.2011.01.015},
 archiveprefix = {arXiv},
 eprint = {0806.2735},
 abstract = {This paper gives an introduction to and overview of the functional quantum programming language QML. The syntax of this language is defined and explained, along with a new QML definition of the quantum teleport algorithm. The categorical operational semantics of QML is also briefly introduced, in the form of annotated quantum circuits. This definition leads to a denotational semantics, given in terms of superoperators. Finally, an implementation in Haskell of the semantics for QML is presented as a compiler. The compiler takes QML programs as input, which are parsed into a Haskell datatype. The output from the compiler is either a quantum circuit (operational), an isometry (pure denotational) or a superoperator (impure denotational). Orthogonality judgements and problems with coproducts in QML are also discussed.},
 webnote = {See \cite{Altenkirch2005} for original description of QML},
 bibsource = {Quantum Programming Languages \& Verification Bibliography, https://git.io/qpl-bib}
}

