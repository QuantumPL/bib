@inproceedings{Ying2017,
 abstract = {Program invariant is a fundamental notion widely used in program verification and
analysis. The aim of this paper is twofold: (i) find an appropriate definition of
invariants for quantum programs; and (ii) develop an effective technique of invariant
generation for verification and analysis of quantum programs.  Interestingly, the
notion of invariant can be defined for quantum programs in two different ways -- additive
invariants and multiplicative invariants -- corresponding to two interpretations of
implication in a continuous valued logic: the Lukasiewicz implication and the Godel
implication. It is shown that both of them can be used to establish partial correctness
of quantum programs.  The problem of generating additive invariants of quantum programs
is addressed by reducing it to an SDP (Semidefinite Programming) problem. This approach
is applied with an SDP solver to generate invariants of two important quantum algorithms
-- quantum walk and quantum Metropolis sampling. Our examples show that the generated
invariants can be used to verify correctness of these algorithms and are helpful in
optimising quantum Metropolis sampling.  To our knowledge, this paper is the first
attempt to define the notion of invariant and to develop a method of invariant generation
for quantum programs.},
 address = {New York, NY, USA},
 author = {Ying, Mingsheng and Ying, Shenggang and Wu, Xiaodi},
 booktitle = {Proceedings of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages},
 doi = {10.1145/3009837.3009840},
 keywords = {Inductive assertions, Quantum programming, Partial correctness, Invariant generation, Program invariants},
 location = {Paris, France},
 month = {January},
 numpages = {15},
 pages = {818--832},
 publisher = {Association for Computing Machinery},
 series = {{POPL} '17},
 title = {Invariants of Quantum Programs: Characterisations and Generation},
 url = {https://opus.lib.uts.edu.au/bitstream/10453/127333/4/p818-ying.pdf},
 year = {2017}
}

