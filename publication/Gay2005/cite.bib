@inproceedings{Gay2005,
 title = {Communicating Quantum Processes},
 author = {Gay, Simon J. and Nagarajan, Rajagopal},
 year = {2005},
 month = {January},
 booktitle = {Proceedings of the 32nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 publisher = {{Association for Computing Machinery}},
 address = {{New York, NY, USA}},
 series = {{{POPL}} '05},
 pages = {145--157},
 doi = {10.1145/1040305.1040318},
 archiveprefix = {arXiv},
 eprint = {quant-ph/0409052},
 url = {http://www.dcs.gla.ac.uk/~simon/publications/CQP-POPL.pdf},
 abstract = {We define a language CQP (Communicating Quantum Processes) for modelling systems which combine quantum and classical communication and computation. CQP combines the communication primitives of the pi-calculus with primitives for measurement and transformation of quantum state; in particular, quantum bits (qubits) can be transmitted from process to process along communication channels. CQP has a static type system which classifies channels, distinguishes between quantum and classical data, and controls the use of quantum state. We formally define the syntax, operational semantics and type system of CQP, prove that the semantics preserves typing, and prove that typing guarantees that each qubit is owned by a unique process within a system. We illustrate CQP by defining models of several quantum communication systems, and outline our plans for using CQP as the foundation for formal analysis and verification of combined quantum and classical systems.},
 keywords = {quantum computing, semantics, verification, types, quantum communication, formal language},
 bibsource = {Quantum Programming Languages \& Verification Bibliography, https://git.io/qpl-bib}
}

