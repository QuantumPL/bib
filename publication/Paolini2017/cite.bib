@inproceedings{Paolini2017,
 title = {{{qPCF}}: {{A Language}} for {{Quantum Circuit Computations}}},
 shorttitle = {qPCF},
 author = {Paolini, Luca and Zorzi, Margherita},
 year = {2017},
 month = {April},
 booktitle = {Theory and Applications of Models of Computation (TAMC '17)},
 publisher = {{Springer International Publishing}},
 address = {{Cham}},
 series = {Lecture Notes in Computer Science},
 volume = {10185},
 pages = {455--469},
 doi = {10.1007/978-3-319-55911-7_33},
 abstract = {We propose qPCF, a functional language able to define and manipulate quantum circuits in an easy and intuitive way. qPCF follows the tradition of ``quantum data & classical control'' languages, inspired to the QRAM model. Ideally, qPCF computes finite circuit descriptions which are offloaded to a quantum co-processor (i.e. a quantum device) for the execution. qPCF extends   PCF  with a new kind of datatype: quantum circuits. The typing of qPCF is quite different from the mainstream of ``quantum data & classical control'' languages that involves linear/exponential modalities. qPCF uses a simple form of dependent types to manage circuits and an implicit form of monad to manage quantum states via a destructive-measurement operator.},
 keywords = {quantum circuits, classical control, quantum programming languages},
 bibsource = {Quantum Programming Languages \& Verification Bibliography, https://git.io/qpl-bib}
}

