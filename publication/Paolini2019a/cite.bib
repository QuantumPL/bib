@article{Paolini2019a,
 title = {{{QPCF}}: {{Higher}}-{{Order Languages}} and {{Quantum Circuits}}},
 shorttitle = {{{QPCF}}},
 author = {Paolini, Luca and Piccolo, Mauro and Zorzi, Margherita},
 year = {2019},
 month = {December},
 journal = {Journal of Automated Reasoning},
 volume = {63},
 number = {4},
 pages = {941--966},
 doi = {10.1007/s10817-019-09518-y},
 archiveprefix = {arXiv},
 eprint = {1809.05723},
 abstract = {qPCF is a paradigmatic quantum programming language that extends PCF with quantum circuits and a quantum co-processor. Quantum circuits are treated as classical data that can be duplicated and manipulated in flexible ways by means of a dependent type system. The co-processor is essentially a standard QRAM device, albeit we avoid to store permanently quantum states in between two co-processor's calls. Despite its quantum features, qPCF retains the classic programming approach of PCF. We introduce qPCF syntax, typing rules, and its operational semantics. We prove fundamental syntactic properties of the system. Moreover, we provide some higher-order examples of circuit encoding.}
}

