@inproceedings{Singhal2020a,
 title = {Quantum Hoare Type Theory: Extended Abstract},
 author = {Singhal, Kartik and Reppy, John},
 year = {2020},
 month = {June},
 booktitle = {Proceedings of the 17th International Conference on Quantum Physics and Logic (QPL), Paris, France, June 2--6, 2020},
 editor = {Valiron, Beno{\^i}t and Mansfield, Shane and Arrighi, Pablo and Panangaden, Prakash},
 publisher = {{Open Publishing Association}},
 series = {Electronic Proceedings in Theoretical Computer Science},
 volume = {340},
 pages = {291--302},
 doi = {10.4204/EPTCS.340.15},
 url = {https://ks.cs.uchicago.edu/publication/qhtt/},
 abstract = {As quantum computers become real, it is high time we come up with effective techniques that help programmers write correct quantum programs. In classical computing, formal verification and sound static type systems prevent several classes of bugs from being introduced. There is a need for similar techniques in the quantum regime. Inspired by Hoare Type Theory in the classical paradigm, we propose Quantum Hoare Types by extending the Quantum IO Monad by indexing it with pre- and post-conditions that serve as program specifications. In this paper, we introduce Quantum Hoare Type Theory (QHTT), present its syntax and typing rules, and demonstrate its effectiveness with the help of examples. QHTT has the potential to be a unified system for programming, specifying, and reasoning about quantum programs. This is a work in progress.},
 keywords = {formal verification, program proof, programming languages, quantum computing, type systems, type theory, pre- and postconditions, program specifications},
 note = {Also see expanded version: \cite{Singhal2020b}}
}

