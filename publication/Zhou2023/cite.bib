@article{Zhou2023,
 title = {CoqQ: Foundational Verification of Quantum Programs},
 author = {Zhou, Li and Barthe, Gilles and Strub, Pierre-Yves and Liu, Junyi and Ying, Mingsheng},
 year = {2023},
 month = {January},
 journal = {Proceedings of the ACM on Programming Languages},
 volume = {7},
 number = {POPL},
 eid = {29},
 pages = {29},
 doi = {10.1145/3571222},
 archiveprefix = {arXiv},
 eprint = {2207.11350},
 url = {https://github.com/coq-quantum/CoqQ},
 abstract = {CoqQ is a framework for reasoning about quantum programs in the Coq proof assistant. Its main components are: a deeply embedded quantum programming language, in which classic quantum algorithms are easily expressed, and an expressive program logic for proving properties of programs. CoqQ is foundational: the program logic is formally proved sound with respect to a denotational semantics based on state-of-art mathematical libraries (mathcomp and mathcomp analysis). CoqQ is also practical: assertions can use Dirac expressions, which eases concise specifications, and proofs can exploit local and parallel reasoning, which minimizes verification effort. We illustrate the applicability of CoqQ with many examples from the literature.},
 keywords = {quantum programs, program logics, proof assistants, mathematical libraries},
 webnote = {POPL '23},
 bibsource = {Quantum Programming Languages \& Verification Bibliography, https://git.io/qpl-bib}
}

