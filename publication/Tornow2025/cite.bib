@article{Tornow2025,
 title = {QVM: Quantum Gate Virtualization Machine},
 author = {Tornow, Nathaniel and Giortamis, Emmanouil and Bhatotia, Pramod},
 year = {2025},
 month = {June},
 journal = {Proceedings of the ACM on Programming Languages},
 publisher = {{Association for Computing Machinery}},
 address = {New York, NY, USA},
 volume = {9},
 number = {PLDI},
 eid = {187},
 pages = {187},
 numpages = {26},
 doi = {10.1145/3729290},
 abstract = {We present the Quantum Gate Virtualization Machine (QVM), an end-to-end generic system for scalable execution of large quantum circuits with high fidelity on noisy and small quantum processors (QPUs) by leveraging gate virtualization. QVM exposes a virtual circuit intermediate representation (IR) that extends the notion of quantum circuits to incorporate gate virtualization. Based on the virtual circuit as our IR, we propose the QVM compiler—an extensible compiler infrastructure to transpile a virtual circuit through a series of modular optimization passes to produce a set of optimized circuit fragments. Lastly, these transpiled circuit fragments are executed on QPUs using our QVM runtime—a scalable and parallel infrastructure to virtualize and execute circuit fragments on a set of QPUs. We evaluate QVM on IBM's 7- and 27-qubit QPUs. Our evaluation shows that our approach allows for the execution of circuits with up to double the number of qubits compared to the qubit-count of a QPU, while improving fidelity by 4.7\texttimes{} on average compared to larger QPUs and that we can effectively reduce circuit depths to only 40\% of the original circuit depths.},
 keywords = {Circuit Cutting, Quantum Circuit Optimization and Compilation},
 webnote = {PLDI '25},
 bibsource = {Quantum Programming Languages \& Verification Bibliography, https://git.io/qpl-bib}
}

