@inproceedings{Fu2020,
 abstract = {Modern quantum programming languages integrate quantum resources and classical control. They must, on the one hand, be linearly typed to reflect the no-cloning property of quantum resources. On the other hand, high-level and practical languages should also support quantum circuits as first-class citizens, as well as families of circuits that are indexed by some classical parameters. Quantum programming languages thus need linear dependent type theory. This paper defines a general semantic structure for such a type theory via certain fibrations of monoidal categories. The categorical model of the quantum circuit description language Proto-Quipper-M in [28] constitutes an example of such a fibration, which means that the language can readily be integrated with dependent types. We then devise both a general linear dependent type system and a dependently typed extension of Proto-Quipper-M, and provide them with operational semantics as well as a prototype implementation.},
 address = {New York, NY, USA},
 archiveprefix = {arxiv},
 author = {Fu, Peng and Kishida, Kohei and Selinger, Peter},
 booktitle = {Proceedings of the 35th Annual ACM/IEEE Symposium on Logic in Computer Science},
 doi = {10.1145/3373718.3394765},
 eprint = {2004.13472},
 month = {July},
 pages = {440--453},
 publisher = {Association for Computing Machinery},
 series = {LICS '20},
 shorttitle = {Linear Dependent Type Theory for Quantum Programming Languages},
 timestamp = {2021-04-18},
 title = {Linear Dependent Type Theory for Quantum Programming Languages: Extended Abstract},
 year = {2020}
}

