@phdthesis{Green2010,
 title = {Towards a Formally Verified Functional Quantum Programming Language},
 author = {Green, Alexander S.},
 year = {2010},
 month = {July},
 school = {University of Nottingham},
 url = {http://eprints.nottingham.ac.uk/11457/},
 abstract = {This thesis looks at the development of a framework for a functional quantum programming language. The framework is first developed in Haskell, looking at how a monadic structure can be used to explicitly deal with the side-effects inherent in the measurement of quantum systems, and goes on to look at how a dependently-typed reimplementation in Agda gives us the basis for a formally verified quantum programming language. The two implementations are not in themselves fully developed quantum programming languages, as they are embedded in their respective parent languages, but are a major step towards the development of a full formally verified, functional quantum programming language. Dubbed the "Quantum IO Monad", this framework is designed following a structural approach as given by a categorical model of quantum computation.},
 keywords = {quantum programming, computer programming, computer languages, haskell, monadic structure, quantum io monad},
 timestamp = {2021-04-18}
}

